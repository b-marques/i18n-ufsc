{"version":3,"sources":["actions/index.js","actions/ActionType.js","components/FormattedText.js","components/App.js","serviceWorker.js","logic/info.js","Shape.js","reducers/marketReducer.js","reducers/index.js","index.js"],"names":["changeIdiom","idiom","type","addStock","ticker","removeStock","index","updateStock","id","value","quantity","name","FormattedMessage","classes","this","props","react_default","a","createElement","Typography_default","variant","size","color","className","grow","reducer","ptbr","enus","Component","connect","state","marketReducer","withStyles","theme","flexGrow","padding","spacing","unit","withTheme","App","anchorEl","idioms","_this2","root","AppBar_default","position","Toolbar_default","FormattedText","Button_default","aria-owns","undefined","aria-haspopup","onClick","event","setState","currentTarget","toUpperCase","Menu_default","open","Boolean","onClose","e","preventDefault","map","element","MenuItem_default","key","Grid_default","container","data","stocks","item","xs","Paper_default","paper","TextField_default","label","classNames","textField","dense","margin","brl","usd","onChange","target","disabled","concat","updated_time","day","month","year","hours","minutes","seconds","totalbrl","totalusd","aria-label","button","Delete_default","extendedIcon","Add_default","wallet","dispatch","bindActionCreators","menuButton","marginLeft","marginRight","textAlign","control","window","location","hostname","match","initial_shape","Info","Object","classCallCheck","compute_wallet_value","date","Date","push","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","Number","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","stock","err","return","splice","arguments","length","action","newState","assign","add_stock","update_stock","remove_stock","automataApp","combineReducers","store","createStore","ReactDOM","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2QAEaA,EAAc,SAAAC,GAAK,MAAK,CACnCC,KCH0B,eDI1BD,MAAOA,IAGIE,EAAW,SAAAC,GAAM,MAAK,CACjCF,KCPuB,YDQvBE,OAAQA,IAGGC,EAAc,SAAAC,GAAK,MAAK,CACnCJ,KCX0B,eDY1BI,MAAOA,IAGIC,EAAc,SAACC,EAAIC,EAAOC,EAAUC,GAAtB,MAAgC,CACzDT,KCf0B,eDgB1BM,GAAIA,EACJC,MAAOA,EACPC,SAAUA,EACVC,KAAMA,+GETFC,mLACK,IACCC,EAAYC,KAAKC,MAAjBF,QACR,OACEG,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,QAASN,KAAKC,MAAMM,KACpBC,MAAM,UACNC,UAAWV,EAAQW,MAEW,UAA7BV,KAAKC,MAAMU,QAAQxB,MAChBa,KAAKC,MAAMW,KACXZ,KAAKC,MAAMY,aAXQC,aAmBhBC,cAFS,SAAAC,GAAK,MAAK,CAAEL,QAASK,EAAMC,gBAIjD,KAFaF,CAGbG,qBA5Ba,SAAAC,GAAK,MAAK,CACvBT,KAAM,CACJU,SAAU,EACVC,QAA8B,EAArBF,EAAMG,QAAQC,QAyBN,CAAEC,WAAW,GAAhCN,CAAwCpB,2GCqBpC2B,6MACJT,MAAQ,CACNU,SAAU,KACVC,OAAQ,CAAC,QAAS,SAClBrC,OAAQ,4EAGD,IAAAsC,EAAA5B,KACC0B,EAAa1B,KAAKgB,MAAlBU,SACA3B,EAAYC,KAAKC,MAAjBF,QAER,OACEG,EAAAC,EAAAC,cAAA,OAAKK,UAAWV,EAAQ8B,MACtB3B,EAAAC,EAAAC,cAAC0B,EAAA3B,EAAD,CAAQ4B,SAAS,UACf7B,EAAAC,EAAAC,cAAC4B,EAAA7B,EAAD,KACED,EAAAC,EAAAC,cAAC6B,EAAD,CACErB,KAAK,+BACLC,KAAK,mBACLN,KAAK,OAEPL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACEG,QAAQ,YACRE,MAAM,YACN2B,YAAWT,EAAW,mBAAgBU,EACtCC,gBAAc,OACdC,QAAS,SAAAC,GACPX,EAAKY,SAAS,CAAEd,SAAUa,EAAME,kBAGjCzC,KAAKC,MAAMU,QAAQxB,MAAMuD,eAE5BxC,EAAAC,EAAAC,cAACuC,EAAAxC,EAAD,CACET,GAAG,cACHgC,SAAUA,EACVkB,KAAMC,QAAQnB,GACdoB,QAAS,SAAAC,GACPA,EAAEC,iBACFpB,EAAKY,SAAS,CAAEd,SAAU,SAG3B1B,KAAKgB,MAAMW,OAAOsB,IAAI,SAACC,EAASxD,GAAV,OACrBQ,EAAAC,EAAAC,cAAC+C,EAAAhD,EAAD,CACEiD,IAAK1D,EACL4C,QAAS,SAAAS,GACPA,EAAEC,iBACFpB,EAAK3B,MAAMf,YAAY0C,EAAKZ,MAAMW,OAAOjC,IACzCkC,EAAKY,SAAS,CAAEd,SAAU,SAG3BwB,EAAQR,qBAOrBxC,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,CAAMmD,WAAS,EAAC7C,UAAWV,EAAQ8B,KAAMP,QAAS,GAC/CtB,KAAKC,MAAMU,QAAQ4C,KAAKC,OAAOP,IAAI,SAACC,EAASxD,GAAV,OAClCQ,EAAAC,EAAAC,cAACiD,EAAAlD,EAAD,CAAMsD,MAAI,EAACC,GAAI,EAAGN,IAAK1D,GACrBQ,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAOM,UAAWV,EAAQ6D,OACxB1D,EAAAC,EAAAC,cAAC6B,EAAD,CACErB,KAAMsC,EAAQ5D,OACduB,KAAMqC,EAAQ5D,OACdiB,KAAK,OAEPL,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACET,GAAG,iBACHN,KAAK,SACL0E,MAC+B,UAA7BlC,EAAK3B,MAAMU,QAAQxB,MACf,aACA,YAENsB,UAAWsD,IAAWhE,EAAQiE,UAAWjE,EAAQkE,OACjDC,OAAO,QACPvE,MAC+B,UAA7BiC,EAAK3B,MAAMU,QAAQxB,MACf+D,EAAQiB,IACRjB,EAAQkB,IAEdC,SAAU,SAAAtB,GACRA,EAAEC,iBACFpB,EAAK3B,MAAMR,YACTC,EACAqD,EAAEuB,OAAO3E,MACTuD,EAAQtD,SACRsD,EAAQrD,KACR+B,EAAK3B,MAAMU,QAAQxB,UAIzBe,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACET,GAAG,iBACHN,KAAK,SACL0E,MAC+B,UAA7BlC,EAAK3B,MAAMU,QAAQxB,MACf,aACA,WAENQ,MAAOuD,EAAQtD,SACfa,UAAWsD,IAAWhE,EAAQiE,UAAWjE,EAAQkE,OACjDC,OAAO,QACPG,SAAU,SAAAtB,GACRA,EAAEC,iBACFpB,EAAK3B,MAAMR,YACTC,EAC6B,UAA7BkC,EAAK3B,MAAMU,QAAQxB,MACf+D,EAAQiB,IACRjB,EAAQkB,IACZrB,EAAEuB,OAAO3E,MACTuD,EAAQrD,KACR+B,EAAK3B,MAAMU,QAAQxB,UAIzBe,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACET,GAAG,iBACHoE,MAAoC,UAA7BlC,EAAK3B,MAAMU,QAAQxB,MAAoB,OAAS,OACvDsB,UAAWsD,IAAWhE,EAAQiE,UAAWjE,EAAQkE,OACjDC,OAAO,QACPvE,MAAOuD,EAAQrD,KACfwE,SAAU,SAAAtB,GACRA,EAAEC,iBACFpB,EAAK3B,MAAMR,YACTC,EAC6B,UAA7BkC,EAAK3B,MAAMU,QAAQxB,MACf+D,EAAQiB,IACRjB,EAAQkB,IACZlB,EAAQtD,SACRmD,EAAEuB,OAAO3E,MACTiC,EAAK3B,MAAMU,QAAQxB,UAIzBe,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACET,GAAG,iBACHoE,MAC+B,UAA7BlC,EAAK3B,MAAMU,QAAQxB,MACf,8BACA,cAENsB,UAAWsD,IAAWhE,EAAQiE,UAAWjE,EAAQkE,OACjDC,OAAO,QACPK,UAAQ,EACR5E,MAC+B,UAA7BiC,EAAK3B,MAAMU,QAAQxB,MAAnB,GAAAqF,OAEMtB,EAAQuB,aAAaC,IAAM,GACvB,IAAMxB,EAAQuB,aAAaC,IAC3BxB,EAAQuB,aAAaC,IAJ/B,KAAAF,OAMMtB,EAAQuB,aAAaE,MAAQ,GACzB,IAAMzB,EAAQuB,aAAaE,MAC3BzB,EAAQuB,aAAaE,MAR/B,KAAAH,OASQtB,EAAQuB,aAAaG,KAT7B,QAAAJ,OAUMtB,EAAQuB,aAAaI,MAAQ,GACzB,IAAM3B,EAAQuB,aAAaI,MAC3B3B,EAAQuB,aAAaI,MAZ/B,KAAAL,OAcMtB,EAAQuB,aAAaK,QAAU,GAC3B,IAAM5B,EAAQuB,aAAaK,QAC3B5B,EAAQuB,aAAaK,QAhB/B,KAAAN,OAkBMtB,EAAQuB,aAAaM,QAAU,GAC3B,IAAM7B,EAAQuB,aAAaM,QAC3B7B,EAAQuB,aAAaM,SApB/B,GAAAP,OAuBMtB,EAAQuB,aAAaE,MAAQ,GACzB,IAAMzB,EAAQuB,aAAaE,MAC3BzB,EAAQuB,aAAaE,MAzB/B,KAAAH,OA2BMtB,EAAQuB,aAAaC,IAAM,GACvB,IAAMxB,EAAQuB,aAAaC,IAC3BxB,EAAQuB,aAAaC,IA7B/B,KAAAF,OA8BQtB,EAAQuB,aAAaG,KA9B7B,QAAAJ,OA+BMtB,EAAQuB,aAAaI,MAAQ,GACzB3B,EAAQuB,aAAaI,MAAQ,GAC7B,GAjCV,KAAAL,OAmCMtB,EAAQuB,aAAaK,QAAU,GAC3B,IAAM5B,EAAQuB,aAAaK,QAC3B5B,EAAQuB,aAAaK,QArC/B,KAAAN,OAuCMtB,EAAQuB,aAAaM,QAAU,GAC3B,IAAM7B,EAAQuB,aAAaM,QAC3B7B,EAAQuB,aAAaM,SAzC/BP,OA0COtB,EAAQuB,aAAaI,OAAS,GAAK,MAAQ,SAItD3E,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACET,GAAG,iBACHoE,MAC+B,UAA7BlC,EAAK3B,MAAMU,QAAQxB,MACf,qBACA,qBAENQ,MAC+B,UAA7BiC,EAAK3B,MAAMU,QAAQxB,MACf+D,EAAQ8B,SACR9B,EAAQ+B,SAEdxE,UAAWsD,IAAWhE,EAAQiE,UAAWjE,EAAQkE,OACjDC,OAAO,QACPK,UAAQ,IAEVrE,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACEG,QAAQ,cACR4E,aAAW,SACXzE,UAAWV,EAAQoF,OACnB7C,QAAS,SAAAS,GACPA,EAAEC,iBACFpB,EAAK3B,MAAMV,YAAYG,KAGzBQ,EAAAC,EAAAC,cAACgF,EAAAjF,EAAD,CAAYM,UAAWV,EAAQsF,qBAMzCnF,EAAAC,EAAAC,cAACuD,EAAAxD,EAAD,CAAOM,UAAWV,EAAQ6D,OACxB1D,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACET,GAAG,iBACHoE,MAAoC,UAA7B9D,KAAKC,MAAMU,QAAQxB,MAAoB,YAAW,SACzDsB,UAAWsD,IAAWhE,EAAQiE,UAAWjE,EAAQkE,OACjDC,OAAO,QAEPG,SAAU,SAAAtB,GACRA,EAAEC,iBACFpB,EAAKY,SAAS,CAAElD,OAAQyD,EAAEuB,OAAO3E,WAGrCO,EAAAC,EAAAC,cAAC8B,EAAA/B,EAAD,CACEG,QAAQ,cACR4E,aAAW,SACXzE,UAAWV,EAAQoF,OACnB7C,QAAS,SAAAS,GACPA,EAAEC,iBACFpB,EAAK3B,MAAMZ,SAASuC,EAAKZ,MAAM1B,UAGjCY,EAAAC,EAAAC,cAACkF,EAAAnF,EAAD,CAASM,UAAWV,EAAQsF,eAC5BnF,EAAAC,EAAAC,cAAC6B,EAAD,CAAerB,KAAK,aAAOC,KAAK,WAElCX,EAAAC,EAAAC,cAAC6B,EAAD,CACErB,KAAK,6BACLC,KAAK,mBACLN,KAAK,OAEPL,EAAAC,EAAAC,cAACyD,EAAA1D,EAAD,CACET,GAAG,iBACHC,MAC+B,UAA7BK,KAAKC,MAAMU,QAAQxB,MACfa,KAAKC,MAAMU,QAAQ4C,KAAKgC,OAAOpB,IAC/BnE,KAAKC,MAAMU,QAAQ4C,KAAKgC,OAAOnB,IAErC3D,UAAWsD,IAAWhE,EAAQiE,UAAWjE,EAAQkE,OACjDC,OAAO,QACPK,UAAQ,aArQFzD,aAwRHC,cAXS,SAAAC,GAAK,MAAK,CAAEL,QAASK,EAAMC,gBACxB,SAAAuE,GAAQ,OACjCC,YACE,CACEvG,cACAG,WACAI,cACAF,eAEFiG,IAEWzE,CAGbG,qBA7Ta,SAAAC,GAAK,MAAK,CACvBU,KAAM,CACJT,SAAU,GAEZV,KAAM,CACJU,SAAU,GAEZsE,WAAY,CACVC,YAAa,GACbC,YAAa,IAEfhC,MAAO,CACLM,OAAQ/C,EAAMG,QAAQC,KACtBF,QAASF,EAAMG,QAAQC,KACvBsE,UAAW,UAEbC,QAAS,CACPzE,QAA8B,EAArBF,EAAMG,QAAQC,MAEzB8D,aAAc,CACZO,YAAazE,EAAMG,QAAQC,MAE7B4D,OAAQ,CACNjB,OAAQ/C,EAAMG,QAAQC,MAExByC,UAAW,CACT2B,WAAYxE,EAAMG,QAAQC,KAC1BqE,YAAazE,EAAMG,QAAQC,MAE7B0C,MAAO,CACLC,OAAQ/C,EAAMG,QAAQC,QA+RL,CAAEC,WAAW,GAAhCN,CAAwCO,ICvUtBoB,QACW,cAA7BkD,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DClBN,ICEaC,EAAgB,CAC3BlF,cAAe,CACb9B,MAAO,QACPoE,KAAM,eDFR,SAAA6C,IAAeC,OAAAC,EAAA,EAAAD,CAAArG,KAAAoG,GACbpG,KAAKwD,OAAS,CACZ,CACElE,OAAQ,QACRM,SAAU,IACVwE,IAAK,GACLD,IAAK,GACLtE,KAAM,cACN4E,aAAc,CACZC,IAAK,GACLC,MAAO,GACPC,KAAM,KACNC,MAAO,GACPC,QAAS,GACTC,QAAS,IAEXC,SAAU,KACVC,SAAU,KAEZ,CACE3F,OAAQ,QACRM,SAAU,GACVwE,IAAK,MACLD,IAAK,OACLtE,KAAM,YACN4E,aAAc,CACZC,IAAK,GACLC,MAAO,EACPC,KAAM,KACNC,MAAO,EACPC,QAAS,GACTC,QAAS,IAEXC,SAAU,OACVC,SAAU,SAEZ,CACE3F,OAAQ,QACRM,SAAU,IACVwE,IAAK,MACLD,IAAK,OACLtE,KAAM,iBACN4E,aAAc,CACZC,IAAK,GACLC,MAAO,EACPC,KAAM,KACNC,MAAO,GACPC,QAAS,GACTC,QAAS,IAEXC,SAAU,OACVC,SAAU,UAGdjF,KAAKuF,OAAS,CAAEpB,IAAK,EAAGC,IAAK,GAC7BpE,KAAKuG,6EAGGjH,GACR,GAAe,KAAXA,EAAJ,CACA,IAAIkH,EAAO,IAAIC,KACfzG,KAAKwD,OAAOkD,KAAK,CACfpH,OAAQA,EACRM,SAAU,EACVwE,IAAK,EACLD,IAAK,EACLtE,KAAM,GACN4E,aAAc,CACZC,IAAK8B,EAAKG,UACVhC,MAAO6B,EAAKI,WAAa,EACzBhC,KAAM4B,EAAKK,cACXhC,MAAO2B,EAAKM,WACZhC,QAAS0B,EAAKO,aACdhC,QAASyB,EAAKQ,cAEhBhC,SAAU,EACVC,SAAU,0CAGDvF,EAAIC,EAAOC,EAAUC,EAAMV,GACtC,IAAIqH,EAAO,IAAIC,KACfzG,KAAKwD,OAAO9D,GAAIE,SAAWqH,OAAOrH,GAClCI,KAAKwD,OAAO9D,GAAI0E,IACJ,UAAVjF,EAAoB8H,OAAOtH,GAtFX,IAsFoCsH,OAAOtH,GAC7DK,KAAKwD,OAAO9D,GAAIyE,IACJ,UAAVhF,EAAoB8H,OAAOtH,GAxFX,IAwFoBsH,OAAOtH,GAC7CK,KAAKwD,OAAO9D,GAAIG,KAAOA,EACvBG,KAAKwD,OAAO9D,GAAI+E,aAAaC,IAAM8B,EAAKG,UAAY,EACpD3G,KAAKwD,OAAO9D,GAAI+E,aAAaE,MAAQ6B,EAAKI,WAAa,EACvD5G,KAAKwD,OAAO9D,GAAI+E,aAAaG,KAAO4B,EAAKK,cACzC7G,KAAKwD,OAAO9D,GAAI+E,aAAaI,MAAQ2B,EAAKM,WAC1C9G,KAAKwD,OAAO9D,GAAI+E,aAAaK,QAAU0B,EAAKO,aAC5C/G,KAAKwD,OAAO9D,GAAI+E,aAAaM,QAAUyB,EAAKQ,aAC5ChH,KAAKwD,OAAO9D,GAAIsF,SAAWiC,OAAOrH,GAAYI,KAAKwD,OAAO9D,GAAIyE,IAC9DnE,KAAKwD,OAAO9D,GAAIuF,SAAWgC,OAAOrH,GAAYI,KAAKwD,OAAO9D,GAAI0E,IAC9DpE,KAAKuG,sEAILvG,KAAKuF,OAAOpB,IAAM,EAClBnE,KAAKuF,OAAOnB,IAAM,EAFG,IAAA8C,GAAA,EAAAC,GAAA,EAAAC,OAAAhF,EAAA,IAGrB,QAAAiF,EAAAC,EAAkBtH,KAAKwD,OAAvB+D,OAAAC,cAAAN,GAAAG,EAAAC,EAAAG,QAAAC,MAAAR,GAAA,EAA+B,KAAtBS,EAAsBN,EAAA1H,MAC7BK,KAAKuF,OAAOpB,KAAOwD,EAAM3C,SACzBhF,KAAKuF,OAAOnB,KAAOuD,EAAM1C,UALN,MAAA2C,GAAAT,GAAA,EAAAC,EAAAQ,EAAA,YAAAV,GAAA,MAAAI,EAAAO,QAAAP,EAAAO,SAAA,WAAAV,EAAA,MAAAC,yCASV1H,GACXM,KAAKwD,OAAOsE,OAAOpI,EAAI,GACvBM,KAAKuG,mCEjFMtF,EA7BO,WAAuB,IAAtBD,EAAsB+G,UAAAC,OAAA,QAAA5F,IAAA2F,UAAA,GAAAA,UAAA,GAAd,EAAGE,EAAWF,UAAAC,OAAA,EAAAD,UAAA,QAAA3F,EACvC8F,EAAW7B,OAAO8B,OAAO,GAAInH,GACjC,OAAQiH,EAAO7I,MACb,INLwB,eMOtB,OADA8I,EAAS/I,MAAQ8I,EAAO9I,MACjB+I,EAET,INRqB,YMUnB,OADAA,EAAS3E,KAAK6E,UAAUH,EAAO3I,QACxB4I,EAET,INVwB,eMiBtB,OANAA,EAAS3E,KAAK8E,aACZJ,EAAOvI,GACPuI,EAAOtI,MACPsI,EAAOrI,SACPqI,EAAOpI,MAEFqI,EAET,INpBwB,eMsBtB,OADAA,EAAS3E,KAAK+E,aAAaL,EAAOzI,OAC3B0I,EAET,QACE,OAAOA,ICpBEK,EAJKC,YAAgB,CAClCvH,kBCMIwH,EAAQC,YAAY/H,EAASwF,GAEnCwC,IAASC,OACP1I,EAAAC,EAAAC,cAACyI,EAAA,EAAD,CAAUJ,MAAOA,GACfvI,EAAAC,EAAAC,cAAC0I,EAAD,OAEFC,SAASC,eAAe,SLiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5508abea.chunk.js","sourcesContent":["import * as actionType from \"./ActionType\";\n\nexport const changeIdiom = idiom => ({\n  type: actionType.CHANGE_IDIOM,\n  idiom: idiom\n});\n\nexport const addStock = ticker => ({\n  type: actionType.ADD_STOCK,\n  ticker: ticker\n});\n\nexport const removeStock = index => ({\n  type: actionType.REMOVE_STOCK,\n  index: index\n});\n\nexport const updateStock = (id, value, quantity, name) => ({\n  type: actionType.UPDATE_STOCK,\n  id: id,\n  value: value,\n  quantity: quantity,\n  name: name\n});\n","export const CHANGE_IDIOM = \"CHANGE_IDIOM\";\nexport const ADD_STOCK = \"ADD_STOCK\";\nexport const REMOVE_STOCK = \"REMOVE_STOCK\";\nexport const UPDATE_STOCK = \"UPDATE_STOCK\";\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nconst styles = theme => ({\n  grow: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 1\n  }\n});\nclass FormattedMessage extends Component {\n  render() {\n    const { classes } = this.props;\n    return (\n      <Typography\n        variant={this.props.size}\n        color=\"inherit\"\n        className={classes.grow}\n      >\n        {this.props.reducer.idiom === \"pt-br\"\n          ? this.props.ptbr\n          : this.props.enus}\n      </Typography>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ reducer: state.marketReducer });\n\nexport default connect(\n  mapStateToProps,\n  null\n)(withStyles(styles, { withTheme: true })(FormattedMessage));\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\n\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { changeIdiom, addStock, updateStock, removeStock } from \"../actions\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormattedText from \"./FormattedText\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport classNames from \"classnames\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  grow: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  paper: {\n    margin: theme.spacing.unit,\n    padding: theme.spacing.unit,\n    textAlign: \"center\"\n  },\n  control: {\n    padding: theme.spacing.unit * 2\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit\n  },\n  button: {\n    margin: theme.spacing.unit\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit\n  },\n  dense: {\n    margin: theme.spacing.unit\n  }\n});\n\nclass App extends Component {\n  state = {\n    anchorEl: null,\n    idioms: [\"en-us\", \"pt-br\"],\n    ticker: \"\"\n  };\n\n  render() {\n    const { anchorEl } = this.state;\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <FormattedText\n              ptbr=\"Gerenciamento de Ações\"\n              enus=\"Stock Management\"\n              size=\"h3\"\n            />\n            <div>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                aria-owns={anchorEl ? \"simple-menu\" : undefined}\n                aria-haspopup=\"true\"\n                onClick={event => {\n                  this.setState({ anchorEl: event.currentTarget });\n                }}\n              >\n                {this.props.reducer.idiom.toUpperCase()}\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                open={Boolean(anchorEl)}\n                onClose={e => {\n                  e.preventDefault();\n                  this.setState({ anchorEl: null });\n                }}\n              >\n                {this.state.idioms.map((element, id) => (\n                  <MenuItem\n                    key={id}\n                    onClick={e => {\n                      e.preventDefault();\n                      this.props.changeIdiom(this.state.idioms[id]);\n                      this.setState({ anchorEl: null });\n                    }}\n                  >\n                    {element.toUpperCase()}\n                  </MenuItem>\n                ))}\n              </Menu>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Grid container className={classes.root} spacing={8}>\n          {this.props.reducer.data.stocks.map((element, id) => (\n            <Grid item xs={3} key={id}>\n              <Paper className={classes.paper}>\n                <FormattedText\n                  ptbr={element.ticker}\n                  enus={element.ticker}\n                  size=\"h4\"\n                />\n                <TextField\n                  id=\"outlined-dense\"\n                  type=\"number\"\n                  label={\n                    this.props.reducer.idiom === \"pt-br\"\n                      ? \"Valor (R$)\"\n                      : \"Value ($)\"\n                  }\n                  className={classNames(classes.textField, classes.dense)}\n                  margin=\"dense\"\n                  value={\n                    this.props.reducer.idiom === \"pt-br\"\n                      ? element.brl\n                      : element.usd\n                  }\n                  onChange={e => {\n                    e.preventDefault();\n                    this.props.updateStock(\n                      id,\n                      e.target.value,\n                      element.quantity,\n                      element.name,\n                      this.props.reducer.idiom\n                    );\n                  }}\n                />\n                <TextField\n                  id=\"outlined-dense\"\n                  type=\"number\"\n                  label={\n                    this.props.reducer.idiom === \"pt-br\"\n                      ? \"Quantidade\"\n                      : \"Quantity\"\n                  }\n                  value={element.quantity}\n                  className={classNames(classes.textField, classes.dense)}\n                  margin=\"dense\"\n                  onChange={e => {\n                    e.preventDefault();\n                    this.props.updateStock(\n                      id,\n                      this.props.reducer.idiom === \"pt-br\"\n                        ? element.brl\n                        : element.usd,\n                      e.target.value,\n                      element.name,\n                      this.props.reducer.idiom\n                    );\n                  }}\n                />\n                <TextField\n                  id=\"outlined-dense\"\n                  label={this.props.reducer.idiom === \"pt-br\" ? \"Nome\" : \"Name\"}\n                  className={classNames(classes.textField, classes.dense)}\n                  margin=\"dense\"\n                  value={element.name}\n                  onChange={e => {\n                    e.preventDefault();\n                    this.props.updateStock(\n                      id,\n                      this.props.reducer.idiom === \"pt-br\"\n                        ? element.brl\n                        : element.usd,\n                      element.quantity,\n                      e.target.value,\n                      this.props.reducer.idiom\n                    );\n                  }}\n                />\n                <TextField\n                  id=\"outlined-dense\"\n                  label={\n                    this.props.reducer.idiom === \"pt-br\"\n                      ? \"Última atualização\"\n                      : \"Last update\"\n                  }\n                  className={classNames(classes.textField, classes.dense)}\n                  margin=\"dense\"\n                  disabled\n                  value={\n                    this.props.reducer.idiom === \"pt-br\"\n                      ? `${\n                          element.updated_time.day < 10\n                            ? \"0\" + element.updated_time.day\n                            : element.updated_time.day\n                        }/${\n                          element.updated_time.month < 10\n                            ? \"0\" + element.updated_time.month\n                            : element.updated_time.month\n                        }/${element.updated_time.year}    ${\n                          element.updated_time.hours < 10\n                            ? \"0\" + element.updated_time.hours\n                            : element.updated_time.hours\n                        }:${\n                          element.updated_time.minutes < 10\n                            ? \"0\" + element.updated_time.minutes\n                            : element.updated_time.minutes\n                        }:${\n                          element.updated_time.seconds < 10\n                            ? \"0\" + element.updated_time.seconds\n                            : element.updated_time.seconds\n                        }`\n                      : `${\n                          element.updated_time.month < 10\n                            ? \"0\" + element.updated_time.month\n                            : element.updated_time.month\n                        }/${\n                          element.updated_time.day < 10\n                            ? \"0\" + element.updated_time.day\n                            : element.updated_time.day\n                        }/${element.updated_time.year}    ${\n                          element.updated_time.hours % 12\n                            ? element.updated_time.hours % 12\n                            : 12\n                        }:${\n                          element.updated_time.minutes < 10\n                            ? \"0\" + element.updated_time.minutes\n                            : element.updated_time.minutes\n                        }:${\n                          element.updated_time.seconds < 10\n                            ? \"0\" + element.updated_time.seconds\n                            : element.updated_time.seconds\n                        }${element.updated_time.hours >= 12 ? \" PM\" : \" AM\"}`\n                  }\n                  // variant=\"outlined\"\n                />\n                <TextField\n                  id=\"outlined-dense\"\n                  label={\n                    this.props.reducer.idiom === \"pt-br\"\n                      ? \"Quantia Total (R$)\"\n                      : \"Total Amount   ($)\"\n                  }\n                  value={\n                    this.props.reducer.idiom === \"pt-br\"\n                      ? element.totalbrl\n                      : element.totalusd\n                  }\n                  className={classNames(classes.textField, classes.dense)}\n                  margin=\"dense\"\n                  disabled\n                />\n                <Button\n                  variant=\"extendedFab\"\n                  aria-label=\"Delete\"\n                  className={classes.button}\n                  onClick={e => {\n                    e.preventDefault();\n                    this.props.removeStock(id);\n                  }}\n                >\n                  <DeleteIcon className={classes.extendedIcon} />\n                </Button>\n              </Paper>\n            </Grid>\n          ))}\n        </Grid>\n        <Paper className={classes.paper}>\n          <TextField\n            id=\"outlined-dense\"\n            label={this.props.reducer.idiom === \"pt-br\" ? \"Código\" : \"Ticker\"}\n            className={classNames(classes.textField, classes.dense)}\n            margin=\"dense\"\n            // variant=\"outlined\"\n            onChange={e => {\n              e.preventDefault();\n              this.setState({ ticker: e.target.value });\n            }}\n          />\n          <Button\n            variant=\"extendedFab\"\n            aria-label=\"Delete\"\n            className={classes.button}\n            onClick={e => {\n              e.preventDefault();\n              this.props.addStock(this.state.ticker);\n            }}\n          >\n            <AddIcon className={classes.extendedIcon} />\n            <FormattedText ptbr=\"Ação\" enus=\"Stock\" />\n          </Button>\n          <FormattedText\n            ptbr=\"Valor do Portfólio (R$)\"\n            enus=\"Wallet Value ($)\"\n            size=\"h6\"\n          />\n          <TextField\n            id=\"outlined-dense\"\n            value={\n              this.props.reducer.idiom === \"pt-br\"\n                ? this.props.reducer.data.wallet.brl\n                : this.props.reducer.data.wallet.usd\n            }\n            className={classNames(classes.textField, classes.dense)}\n            margin=\"dense\"\n            disabled\n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ reducer: state.marketReducer });\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators(\n    {\n      changeIdiom,\n      addStock,\n      updateStock,\n      removeStock\n    },\n    dispatch\n  );\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles, { withTheme: true })(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const exchange_rate = 3.8;\n\nexport default class Info {\n  constructor() {\n    this.stocks = [\n      {\n        ticker: \"BIDI4\",\n        quantity: 100,\n        usd: 10,\n        brl: 38,\n        name: \"Banco Inter\",\n        updated_time: {\n          day: 26,\n          month: 10,\n          year: 2018,\n          hours: 10,\n          minutes: 58,\n          seconds: 32\n        },\n        totalbrl: 3800,\n        totalusd: 1000\n      },\n      {\n        ticker: \"PETR4\",\n        quantity: 50,\n        usd: 32.55,\n        brl: 123.69,\n        name: \"Petrobras\",\n        updated_time: {\n          day: 21,\n          month: 7,\n          year: 2016,\n          hours: 1,\n          minutes: 42,\n          seconds: 32\n        },\n        totalbrl: 6184.5,\n        totalusd: 1627.25\n      },\n      {\n        ticker: \"MGLU3\",\n        quantity: 254,\n        usd: 94.65,\n        brl: 359.67,\n        name: \"Magazine Luiza\",\n        updated_time: {\n          day: 21,\n          month: 9,\n          year: 2017,\n          hours: 22,\n          minutes: 35,\n          seconds: 32\n        },\n        totalbrl: 6184.5,\n        totalusd: 24041.1\n      }\n    ];\n    this.wallet = { brl: 0, usd: 0 };\n    this.compute_wallet_value();\n  }\n\n  add_stock(ticker) {\n    if (ticker === \"\") return;\n    let date = new Date();\n    this.stocks.push({\n      ticker: ticker,\n      quantity: 0,\n      usd: 0,\n      brl: 0,\n      name: \"\",\n      updated_time: {\n        day: date.getDate(),\n        month: date.getMonth() + 1,\n        year: date.getFullYear(),\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds()\n      },\n      totalbrl: 0,\n      totalusd: 0\n    });\n  }\n  update_stock(id, value, quantity, name, idiom) {\n    let date = new Date();\n    this.stocks[id].quantity = Number(quantity);\n    this.stocks[id].usd =\n      idiom === \"pt-br\" ? Number(value) / exchange_rate : Number(value);\n    this.stocks[id].brl =\n      idiom === \"pt-br\" ? Number(value) : Number(value) * exchange_rate;\n    this.stocks[id].name = name;\n    this.stocks[id].updated_time.day = date.getDate() + 1;\n    this.stocks[id].updated_time.month = date.getMonth() + 1;\n    this.stocks[id].updated_time.year = date.getFullYear();\n    this.stocks[id].updated_time.hours = date.getHours();\n    this.stocks[id].updated_time.minutes = date.getMinutes();\n    this.stocks[id].updated_time.seconds = date.getSeconds();\n    this.stocks[id].totalbrl = Number(quantity) * this.stocks[id].brl;\n    this.stocks[id].totalusd = Number(quantity) * this.stocks[id].usd;\n    this.compute_wallet_value();\n  }\n\n  compute_wallet_value() {\n    this.wallet.brl = 0;\n    this.wallet.usd = 0;\n    for (let stock of this.stocks) {\n      this.wallet.brl += stock.totalbrl;\n      this.wallet.usd += stock.totalusd;\n    }\n  }\n\n  remove_stock(id) {\n    this.stocks.splice(id, 1);\n    this.compute_wallet_value();\n  }\n}\n","import Info from \"./logic/info\";\n\nexport const initial_shape = {\n  marketReducer: {\n    idiom: \"en-us\",\n    data: new Info()\n  }\n};\n","import * as actionType from \"../actions/ActionType\";\n\nconst marketReducer = (state = 0, action) => {\n  let newState = Object.assign({}, state);\n  switch (action.type) {\n    case actionType.CHANGE_IDIOM:\n      newState.idiom = action.idiom;\n      return newState;\n\n    case actionType.ADD_STOCK:\n      newState.data.add_stock(action.ticker);\n      return newState;\n\n    case actionType.UPDATE_STOCK:\n      newState.data.update_stock(\n        action.id,\n        action.value,\n        action.quantity,\n        action.name\n      );\n      return newState;\n\n    case actionType.REMOVE_STOCK:\n      newState.data.remove_stock(action.index);\n      return newState;\n\n    default:\n      return newState;\n  }\n};\n\nexport default marketReducer;\n","import { combineReducers } from \"redux\";\nimport marketReducer from \"./marketReducer\";\n\nconst automataApp = combineReducers({\n  marketReducer\n});\n\nexport default automataApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { initial_shape } from \"./Shape\";\nimport reducer from \"./reducers\";\nimport { createStore } from \"redux\";\n\nconst store = createStore(reducer, initial_shape);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}